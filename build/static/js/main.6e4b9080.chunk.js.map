{"version":3,"sources":["http-common.js","services/tutorial.service.js","components/add-tutorial.component.js","components/tutorial.component.js","components/tutorials-list.component.js","App.js","serviceWorker.js","index.js"],"names":["axios","create","baseURL","headers","http","get","id","data","post","put","delete","title","AddTutorial","props","onChangeTitle","bind","onChangeDescription","handleChangeFile","saveTutorial","newTutorial","state","name","address","productfile","submitted","e","this","setState","target","value","files","FormData","append","TutorialDataService","then","response","console","log","className","onClick","htmlFor","type","required","onChange","class","Component","Tutorial","getTutorial","updatePublished","updateTutorial","deleteTutorial","currentTutorial","message","match","params","prevState","catch","status","update","published","history","push","TutorialsList","retrieveTutorials","refreshList","setActiveTutorial","removeAllTutorials","tutorials","currentIndex","searchTitle","imgurl","getAll","tutorial","index","deleteAll","map","key","alt","src","width","height","to","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.6e4b9080.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n  baseURL: \"http://localhost:4500/api\",\r\n  headers: {\r\n    'Content-type': 'application/json'\r\n  }\r\n});","import http from \"../http-common\";\r\n\r\nclass TutorialDataService {\r\n  getAll() {\r\n    return http.get(\"/tutorials\");\r\n  }\r\n\r\n  get(id) {\r\n    return http.get(`/tutorials/${id}`);\r\n  }\r\n\r\n  create(data) {\r\n    return http.post(\"/tutorials\", data);\r\n  }\r\n\r\n  update(id, data) {\r\n    return http.put(`/tutorials/${id}`, data);\r\n  }\r\n\r\n  delete(id) {\r\n    return http.delete(`/tutorials/${id}`);\r\n  }\r\n\r\n  deleteAll() {\r\n    return http.delete(`/tutorials`);\r\n  }\r\n\r\n  findByTitle(title) {\r\n    return http.get(`/tutorials?title=${title}`);\r\n  }\r\n}\r\n\r\nexport default new TutorialDataService();","import React, { Component } from \"react\";\r\nimport TutorialDataService from \"../services/tutorial.service\";\r\n\r\nexport default class AddTutorial extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChangeTitle = this.onChangeTitle.bind(this);\r\n    this.onChangeDescription = this.onChangeDescription.bind(this);\r\n    this.handleChangeFile = this.handleChangeFile.bind(this);\r\n    this.saveTutorial = this.saveTutorial.bind(this);\r\n    this.newTutorial = this.newTutorial.bind(this);\r\n    \r\n\r\n    this.state = {\r\n      id: null,\r\n      name: \"\",\r\n      address: \"\", \r\n      productfile:null,\r\n\r\n      submitted: false\r\n    };\r\n  }\r\n\r\n  onChangeTitle(e) {\r\n    this.setState({\r\n      name: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeDescription(e) {\r\n    this.setState({\r\n      address: e.target.value\r\n    });\r\n  }\r\n  handleChangeFile(e){\r\n    this.setState({productfile:e.target.files[0]});\r\n  }\r\n  saveTutorial() {\r\n    let data = new FormData();    \r\n    data.append('name',this.state.name);\r\n    data.append('address',this.state.address);\r\n    data.append('productfile',this.state.productfile);\r\n\r\n\r\n    TutorialDataService.create(data)\r\n      .then(response => {\r\n        this.setState({\r\n          id: response.data.id,\r\n          name: response.data.name,\r\n          address: response.data.address,\r\n          productfile: response.data.productfile,\r\n\r\n          submitted: true\r\n        });\r\n        console.log(response.data);\r\n      })\r\n      // .catch(e => {\r\n      //   console.log(e);\r\n      // });\r\n  }\r\n\r\n  newTutorial() {\r\n    this.setState({\r\n      id: null,\r\n      name: \"\",\r\n      address: \"\",\r\n\r\n\r\n      submitted: false\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"submit-form\">\r\n        {this.state.submitted ? (\r\n          <div>\r\n            <h4>You submitted successfully!</h4>\r\n            <button className=\"btn btn-success\" onClick={this.newTutorial}>\r\n              Add\r\n            </button>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"name\">Name</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"name\"\r\n                required\r\n                value={this.state.name}\r\n                onChange={this.onChangeTitle}\r\n                name=\"name\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"address\">address</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"address\"\r\n                required\r\n                value={this.state.address}\r\n                onChange={this.onChangeDescription}\r\n                name=\"address\"\r\n              />\r\n            </div>\r\n\r\n            <div class=\"form-group\">\r\n                        <label>Files:</label>\r\n                        <input\r\n                        type=\"file\"\r\n                            name=\"productfile\"\r\n                          //  value={this.state.file.name}\r\n                            onChange={this.handleChangeFile}\r\n                           // placeholder=\"Enter comment\"\r\n                            class=\"form-control\" />\r\n                    </div>\r\n                    <br></br>\r\n                    \r\n\r\n            <button onClick={this.saveTutorial} className=\"btn btn-success\">\r\n              Submit\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n    \r\n  }\r\n// {/* <table class=\"table\">\r\n//   <thead>\r\n//     <tr>\r\n//       <th scope=\"col\">#</th>\r\n//       <th scope=\"col\">First</th>\r\n//       <th scope=\"col\">Last</th>\r\n//       <th scope=\"col\">Handle</th>\r\n//     </tr>\r\n//   </thead>\r\n//   <tbody>\r\n//     <tr>\r\n//       <th scope=\"row\">1</th>\r\n//       <td>Mark</td>\r\n//       <td>Otto</td>\r\n//       <td>@mdo</td>\r\n//     </tr>\r\n//     <tr>\r\n//       <th scope=\"row\">2</th>\r\n//       <td>Jacob</td>\r\n//       <td>Thornton</td>\r\n//       <td>@fat</td>\r\n//     </tr>\r\n//     <tr>\r\n//       <th scope=\"row\">3</th>\r\n//       <td>Larry</td>\r\n//       <td>the Bird</td>\r\n//       <td>@twitter</td>\r\n//     </tr>\r\n//   </tbody>\r\n// </table> */}\r\n}\r\n ","import React, { Component } from \"react\";\r\nimport TutorialDataService from \"../services/tutorial.service\";\r\n\r\nexport default class Tutorial extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChangeTitle = this.onChangeTitle.bind(this);\r\n    this.onChangeDescription = this.onChangeDescription.bind(this);\r\n    this.getTutorial = this.getTutorial.bind(this);\r\n    this.handleChangeFile = this.handleChangeFile.bind(this);\r\n    this.updatePublished = this.updatePublished.bind(this);\r\n    this.updateTutorial = this.updateTutorial.bind(this);\r\n    this.deleteTutorial = this.deleteTutorial.bind(this);\r\n\r\n    this.state = {\r\n      currentTutorial: {\r\n        id: null,\r\n        name: \"\",\r\n        address: \"\",\r\n        productfile:\"\",\r\n      },\r\n      message: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getTutorial(this.props.match.params.id);\r\n  }\r\n\r\n  onChangeTitle(e) {\r\n    const name = e.target.value;\r\n\r\n    this.setState(function(prevState) {\r\n      return {\r\n        currentTutorial: {\r\n          ...prevState.currentTutorial,\r\n          name: name\r\n        }\r\n      };\r\n    });\r\n  }\r\n\r\n  onChangeDescription(e) {\r\n    const address = e.target.value;\r\n    \r\n    this.setState(prevState => ({\r\n      currentTutorial: {\r\n        ...prevState.currentTutorial,\r\n        address: address\r\n      }\r\n    }));\r\n  }\r\n\r\n  handleChangeFile(e){\r\n    const productfile =this.setState({productfile:e.target.files[0]});\r\n    \r\n    this.setState(prevState => ({\r\n      currentTutorial: {\r\n        ...prevState.currentTutorial,\r\n        productfile: productfile\r\n      }\r\n    }));\r\n  }\r\n\r\n  getTutorial(id) {\r\n    TutorialDataService.get(id)\r\n      .then(response => {\r\n        this.setState({\r\n          currentTutorial: response.data\r\n        });\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  updatePublished(status) {\r\n    var data = {\r\n      id: this.state.currentTutorial.id,\r\n      name: this.state.currentTutorial.name,\r\n      address: this.state.currentTutorial.address,\r\n      productfile: this.state.currentTutorial.productfile,\r\n    };\r\n\r\n    TutorialDataService.update(this.state.currentTutorial.id, data)\r\n      .then(response => {\r\n        this.setState(prevState => ({\r\n          currentTutorial: {\r\n            ...prevState.currentTutorial,\r\n            published: status\r\n          }\r\n        }));\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  updateTutorial() {\r\n    TutorialDataService.update(\r\n      this.state.currentTutorial.id,\r\n      this.state.currentTutorial\r\n    )\r\n      .then(response => {\r\n        console.log(response.data);\r\n        this.setState({\r\n          message: \"The tutorial was updated successfully!\"\r\n        });\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  deleteTutorial() {    \r\n    TutorialDataService.delete(this.state.currentTutorial.id)\r\n      .then(response => {\r\n        console.log(response.data);\r\n        this.props.history.push('/tutorials')\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { currentTutorial } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        {currentTutorial ? (\r\n          <div className=\"edit-form\">\r\n            <h4>Tutorial</h4>\r\n            <form>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"name\">Name</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"name\"\r\n                  value={currentTutorial.name}\r\n                  onChange={this.onChangeTitle}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"address\">Address</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"address\"\r\n                  value={currentTutorial.address}\r\n                  onChange={this.onChangeDescription}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"productfile\">File</label>\r\n                <input\r\n                  type=\"file\"\r\n                  \r\n                  className=\"form-control\"\r\n                  id=\"productfile\"\r\n                  // value={currentTutorial.productfile}\r\n                  onChange={this.handleChangeFile}\r\n                />\r\n          \r\n              </div>\r\n\r\n              {/* <div className=\"form-group\">\r\n                <label>\r\n                  <strong>Status:</strong>\r\n                </label>\r\n                {currentTutorial.published ? \"Published\" : \"Pending\"}\r\n              </div> */}\r\n            </form>\r\n\r\n            {/* {currentTutorial.published ? (\r\n              <button\r\n                className=\"badge badge-primary mr-2\"\r\n                onClick={() => this.updatePublished(false)}\r\n              >\r\n                UnPublish\r\n              </button>\r\n            ) : (\r\n              <button\r\n                className=\"badge badge-primary mr-2\"\r\n                onClick={() => this.updatePublished(true)}\r\n              >\r\n                Publish\r\n              </button>\r\n            )} */}\r\n\r\n            <button\r\n              className=\"badge badge-danger mr-2\"\r\n              onClick={this.deleteTutorial}\r\n            >\r\n              Delete\r\n            </button>\r\n\r\n            <button\r\n              type=\"submit\"\r\n              className=\"badge badge-success\"\r\n              onClick={this.updateTutorial}\r\n            >\r\n              Update\r\n            </button>\r\n            <p>{this.state.message}</p>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <br />\r\n            <p>Please click on a Tutorial...</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport TutorialDataService from \"../services/tutorial.service\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class TutorialsList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    // this.onChangeSearchTitle = this.onChangeSearchTitle.bind(this);\r\n    this.retrieveTutorials = this.retrieveTutorials.bind(this);\r\n    this.refreshList = this.refreshList.bind(this);\r\n    this.setActiveTutorial = this.setActiveTutorial.bind(this);\r\n    this.removeAllTutorials = this.removeAllTutorials.bind(this);\r\n    // this.searchTitle = this.searchTitle.bind(this);\r\n\r\n    this.state = {\r\n      tutorials: [],\r\n      currentTutorial: null,\r\n      currentIndex: -1,\r\n      searchTitle: \"\",\r\n      imgurl:\"http://localhost:4500/\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.retrieveTutorials();\r\n  }\r\n\r\n  // onChangeSearchTitle(e) {\r\n  //   const searchTitle = e.target.value;\r\n\r\n  //   this.setState({\r\n  //     searchTitle: searchTitle\r\n  //   });\r\n  // }\r\n\r\n  retrieveTutorials() {\r\n    TutorialDataService.getAll()\r\n      .then(response => {\r\n        this.setState({\r\n          tutorials: response.data\r\n        });\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  refreshList() {\r\n    this.retrieveTutorials();\r\n    this.setState({\r\n      currentTutorial: null,\r\n      currentIndex: -1\r\n    });\r\n  }\r\n\r\n  setActiveTutorial(tutorial, index) {\r\n    this.setState({\r\n      currentTutorial: tutorial,\r\n      currentIndex: index\r\n    });\r\n  }\r\n\r\n  removeAllTutorials() {\r\n    TutorialDataService.deleteAll()\r\n      .then(response => {\r\n        console.log(response.data);\r\n        this.refreshList();\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n  // searchTitle() {\r\n  //   this.setState({\r\n  //     currentTutorial: null,\r\n  //     currentIndex: -1\r\n  //   });\r\n\r\n\r\n  //   TutorialDataService.findByTitle(this.state.searchTitle)\r\n  //     .then(response => {\r\n  //       this.setState({\r\n  //         tutorials: response.data\r\n  //       });\r\n  //       console.log(response.data);\r\n  //     })\r\n  //     .catch(e => {\r\n  //       console.log(e);\r\n  //     });\r\n  // }\r\n\r\n  render() {\r\n    const {tutorials, currentTutorial, currentIndex} = this.state;\r\n\r\n    return (\r\n      <div className=\"list row\">\r\n        {/* <div className=\"col-md-8\"> */}\r\n          {/* <div className=\"input-group mb-3\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              placeholder=\"Search by title\"\r\n              value={searchTitle}\r\n              onChange={this.onChangeSearchTitle}\r\n            />\r\n            <div className=\"input-group-append\">\r\n              <button\r\n                className=\"btn btn-outline-secondary\"\r\n                type=\"button\"\r\n                onClick={this.searchTitle}\r\n              >\r\n                Search\r\n              </button>\r\n            </div>\r\n          </div> */}\r\n        {/* </div> */}\r\n        <div className=\"col-md-6\">\r\n          <h4>Tutorials List</h4>\r\n\r\n          <ul className=\"list-group\">\r\n            {tutorials &&\r\n              tutorials.map((tutorial, index) => (\r\n                <li\r\n                  className={\r\n                    \"list-group-item \" +\r\n                    (index === currentIndex ? \"active\" : \"\")\r\n                  }\r\n                  onClick={() => this.setActiveTutorial(tutorial, index)}\r\n                  key={index}\r\n                >\r\n                  {tutorial.name}\r\n                </li>\r\n              ))}\r\n          </ul>\r\n\r\n          <button\r\n            className=\"m-3 btn btn-sm btn-danger\"\r\n            onClick={this.removeAllTutorials}\r\n          >\r\n            Remove All\r\n          </button>\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          {currentTutorial ? (\r\n            <div>\r\n              <h4>Tutorial</h4>\r\n              <div>\r\n                <label>\r\n                  <strong>Name:</strong>\r\n                </label>{\" \"}\r\n                {currentTutorial.name}\r\n              </div>\r\n              <div>\r\n                <label>\r\n                  <strong>Address:</strong>\r\n                </label>{\" \"}\r\n                {currentTutorial.address}\r\n              </div>\r\n              <div>\r\n                <label>\r\n                  <strong>File:</strong>\r\n                  \r\n                </label>{\" \"}\r\n                {/* {currentTutorial.productfile}\r\n                {this.state.imgurl}/{currentTutorial.productfile} */}\r\n                \r\n                <img alt=\"productfile\" src={this.state.imgurl + currentTutorial.productfile} width=\"100\" height=\"100\"></img>\r\n              </div>\r\n              {/* <div>\r\n                <label>\r\n                  <strong>Status:</strong>\r\n                </label>{\" \"}\r\n                {currentTutorial.published ? \"Published\" : \"Pending\"}\r\n              </div> */}\r\n\r\n              <Link\r\n                to={\"/tutorials/\" + currentTutorial.id}\r\n                className=\"badge badge-warning\"\r\n              >\r\n                Edit\r\n              </Link>\r\n            </div>\r\n          ) : (\r\n            <div>\r\n              <br />\r\n              <p>Please click on a Tutorial...</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Switch, Route, Link } from \"react-router-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./App.css\";\r\n\r\nimport AddTutorial from \"./components/add-tutorial.component\";\r\nimport Tutorial from \"./components/tutorial.component\";\r\nimport TutorialsList from \"./components/tutorials-list.component\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\r\n          <Link to={\"/tutorials\"} className=\"navbar-brand\">\r\n            Home\r\n          </Link>\r\n          <div className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item\">\r\n              <Link to={\"/tutorials\"} className=\"nav-link\">\r\n                Tutorials\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to={\"/add\"} className=\"nav-link\">\r\n                Add\r\n              </Link>\r\n            </li>\r\n          </div>\r\n        </nav>\r\n\r\n        <div className=\"container mt-3\">\r\n          <Switch>\r\n            <Route exact path={[\"/\", \"/tutorials\"]} component={TutorialsList} />\r\n            <Route exact path=\"/add\" component={AddTutorial} />\r\n            <Route path=\"/tutorials/:id\" component={Tutorial} />\r\n          </Switch>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}